{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Downloads\\\\Git\\\\CultivosDePlantasFrutales\\\\frontend\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const addMessage = (text, sender = 'user') => {\n    setChat(prevChat => [...prevChat, {\n      text,\n      sender\n    }]);\n  };\n\n  // Inicializa la conversación solo una vez al montar el componente\n  useEffect(() => {\n    startConversation();\n  }, []);\n  const startConversation = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/consultar/iniciar');\n      const data = await response.json();\n      if (data.pregunta) {\n        addMessage(data.pregunta, 'bot');\n      }\n    } catch (error) {\n      addMessage('Ocurrió un error al iniciar la consulta. Inténtalo nuevamente.', 'bot');\n    }\n  };\n\n  // Función para enviar respuesta \"Sí\" o \"No\"\n  const sendResponse = async response => {\n    addMessage(response ? \"Sí\" : \"No\", 'user');\n    setIsLoading(true);\n    try {\n      const res = await fetch('http://127.0.0.1:8000/consultar/responder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          response\n        })\n      });\n      const data = await res.json();\n      if (data.pregunta) {\n        addMessage(data.pregunta, 'bot');\n      } else if (data.resultado) {\n        addMessage(`Resultado: ${data.resultado}`, 'bot');\n        addMessage(`Descripción: ${data.descripcion}`, 'bot');\n        addMessage(`Propiedades: ${data.propiedades.join(', ')}`, 'bot');\n      }\n    } catch (error) {\n      addMessage('Ocurrió un error al procesar tu respuesta. Inténtalo nuevamente.', 'bot');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para reiniciar el chat\n  const resetChat = () => {\n    setChat([]);\n    startConversation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendResponse(true),\n        disabled: isLoading,\n        className: \"yes-button\",\n        children: \"S\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendResponse(false),\n        disabled: isLoading,\n        className: \"no-button\",\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetChat,\n        className: \"reset-button\",\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"KtiF3DObeSOh65DSx+gJQn0MrQo=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","chat","setChat","isLoading","setIsLoading","addMessage","text","sender","prevChat","startConversation","response","fetch","data","json","pregunta","error","sendResponse","res","method","headers","body","JSON","stringify","resultado","descripcion","propiedades","join","resetChat","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Downloads/Git/CultivosDePlantasFrutales/frontend/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Chatbot.css';\r\n\r\nfunction Chatbot() {\r\n  const [chat, setChat] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const addMessage = (text, sender = 'user') => {\r\n    setChat((prevChat) => [...prevChat, { text, sender }]);\r\n  };\r\n\r\n  // Inicializa la conversación solo una vez al montar el componente\r\n  useEffect(() => {\r\n    startConversation();\r\n  }, []);\r\n\r\n  const startConversation = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/consultar/iniciar');\r\n      const data = await response.json();\r\n      if (data.pregunta) {\r\n        addMessage(data.pregunta, 'bot');\r\n      }\r\n    } catch (error) {\r\n      addMessage('Ocurrió un error al iniciar la consulta. Inténtalo nuevamente.', 'bot');\r\n    }\r\n  };\r\n\r\n  // Función para enviar respuesta \"Sí\" o \"No\"\r\n  const sendResponse = async (response) => {\r\n    addMessage(response ? \"Sí\" : \"No\", 'user');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const res = await fetch('http://127.0.0.1:8000/consultar/responder', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ response }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.pregunta) {\r\n        addMessage(data.pregunta, 'bot');\r\n      } else if (data.resultado) {\r\n        addMessage(`Resultado: ${data.resultado}`, 'bot');\r\n        addMessage(`Descripción: ${data.descripcion}`, 'bot');\r\n        addMessage(`Propiedades: ${data.propiedades.join(', ')}`, 'bot');\r\n      }\r\n    } catch (error) {\r\n      addMessage('Ocurrió un error al procesar tu respuesta. Inténtalo nuevamente.', 'bot');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para reiniciar el chat\r\n  const resetChat = () => {\r\n    setChat([]);\r\n    startConversation();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chat-window\">\r\n        {chat.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"button-container\">\r\n      <button onClick={() => sendResponse(true)} disabled={isLoading} className=\"yes-button\">\r\n        Sí\r\n      </button>\r\n      <button onClick={() => sendResponse(false)} disabled={isLoading} className=\"no-button\">\r\n         No\r\n      </button>\r\n      <button onClick={resetChat} className=\"reset-button\">\r\n        Reiniciar\r\n      </button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}